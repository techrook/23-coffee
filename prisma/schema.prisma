datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

 enum OrderStatus {
    PENDING 
    SHIPPED 
    CANCELLED
  }

  enum Role {
  USER
  ADMIN
}


model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  carts     Cart[]
  orders    Order[]
}


model Cart {
  id          String      @id @default(uuid()) @db.Uuid
  userId      String      @db.Uuid
  user        User        @relation(fields: [userId], references: [id])
  items       CartItem[]
  totalAmount Float       @default(0)
}

model CartItem {
  id        String   @id @default(uuid()) @db.Uuid
  cartId    String   @db.Uuid
  coffeeId  String   @db.Uuid
  quantity  Int      @default(1)
  cart      Cart     @relation(fields: [cartId], references: [id])
  coffee    Coffee   @relation(fields: [coffeeId], references: [id])
}

model Order {
  id         String      @id @default(uuid()) @db.Uuid
  userId     String      @db.Uuid
  user       User        @relation(fields: [userId], references: [id])
  status     OrderStatus @default(PENDING)
  totalPrice Float
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  items      OrderItem[] @relation("OrderItems")

  OrderItem OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid()) @db.Uuid
  orderId   String   @db.Uuid
  coffeeId  String   @db.Uuid
  quantity  Int      @default(1)
  price     Float
  order     Order    @relation(fields: [orderId], references: [id])
  coffee    Coffee   @relation(fields: [coffeeId], references: [id])

  Order Order[] @relation("OrderItems")
}

model Coffee {
  id          String   @id @default(uuid()) @db.Uuid
  name        String   @unique
  description String
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  cartItems   CartItem[]
  orderItems  OrderItem[]
}


