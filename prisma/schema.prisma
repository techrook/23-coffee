generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  password  String
  name      String
  role      String   @default("user") // User role: "user" or "admin"
  createdAt DateTime @default(now())
  
  cart   Cart?
  orders Order[]
}

model Coffee {
  id          String     @id @default(uuid()) @db.Uuid
  name        String     @unique
  description String
  price       Float
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  cartItems   CartItem[]
}

model Cart {
  id        String     @id @default(uuid()) @db.Uuid
  userId    String     @db.Uuid @unique
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model CartItem {
  id       String @id @default(uuid()) @db.Uuid
  cartId   String @db.Uuid    // Ensure this is a UUID type
  coffeeId String @db.Uuid    // Ensure this is a UUID type
  quantity Int    @default(1)

  cart   Cart    @relation(fields: [cartId], references: [id])
  coffee Coffee @relation(fields: [coffeeId], references: [id])
}


model Order {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid   // Updated to match User id type
  status    String   @default("pending") // Order status: "pending", "completed", "cancelled"
  items     Json     @default("[]") // JSON array for order items
  total     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}
